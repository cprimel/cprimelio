@mixin buttonHover {
  &:hover {
    color: $color-hover;
    border-color: $color-hover;
  }
}

@mixin clearfix {
  &::after {
    content: "";
    clear: both;
    display: table;
  }
}

@mixin absCenter {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin sectionWrapper {
  height: 100%;
  width: auto;
  position: relative;
}

@mixin sectionContainer {
  display: flex;
  flex-direction: column;
  align-items: left;
  height: 90%;
  width: 75%;
  padding: 1rem 2rem;
  margin: auto;
  background-color: $color-white;
  box-shadow: 0 1rem 2rem 0 rgba($color-black, 0.25);
}

// Media query managers

/*
Width:
0 - 360px: small phone
360 - 600px: phone
600px - 900px: tablet portrait
900px - 1200px: tablet landscape
1200px - 1800px: default
1800px +: big desktop

Height:
0-650px: phone (landscape mode)
650px +: default

$breakpoint arg choices:
- sm-phone
- phone
- phone-land
- tab-port
- tab-land
- big

1em = 16px
*/

@mixin respond($breakpoint) {
  @if $breakpoint == sm-phone {
    @media (max-width: 22.5em) {
      @content;
    }
  }
  @if $breakpoint == phone {
    @media (max-width: 37.5em) {
      @content;
    }
  }
  @if $breakpoint == phone-land {
    @media(max-height: 40.625em){
      @content;
    }
  }

  @if $breakpoint == tab-port {
    @media (max-width: 56.25em) {
      @content;
    }
  }
  @if $breakpoint == tab-land {
    @media (max-width: 75em) {
      @content;
    }
  }
  @if $breakpoint == big {
    @media (min-width: 112.5em) {
      @content;
    }
  }
}
